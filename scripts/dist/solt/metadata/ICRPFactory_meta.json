{
    "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"poolTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"poolTokenName\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"constituentTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenBalances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"internalType\":\"struct PoolParams\",\"name\":\"poolParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"canPauseSwapping\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeWeights\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canAddRemoveTokens\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canWhitelistLPs\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeCap\",\"type\":\"bool\"}],\"internalType\":\"struct Rights\",\"name\":\"rights\",\"type\":\"tuple\"}],\"name\":\"newCrp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"https://github.com/balancer-labs/configurable-rights-pool/blob/5bd63657ac71a9e5f8484ea561de572193b3317b/contracts/CRPFactory.sol#L27\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"./contracts/pool/ICRPFactory.sol\":\"ICRPFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"./contracts/pool/ICRPFactory.sol\":{\"content\":\"// SPDX-License-Identifier: CAL\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\nimport { PoolParams } from \\\"./IConfigurableRightsPool.sol\\\";\\nimport { Rights } from \\\"./IRightsManager.sol\\\";\\n\\n/// Mirrors the Balancer `CRPFactory` functions relevant to\\n/// bootstrapping a pool. This is the minimal interface required for\\n/// `RedeemableERC20Pool` to function, much of the Balancer contract is elided\\n/// intentionally. Clients should use Balancer code directly.\\n// solhint-disable-next-line max-line-length\\n/// https://github.com/balancer-labs/configurable-rights-pool/blob/5bd63657ac71a9e5f8484ea561de572193b3317b/contracts/CRPFactory.sol#L27\\ninterface ICRPFactory {\\n    // solhint-disable-next-line max-line-length\\n    // https://github.com/balancer-labs/configurable-rights-pool/blob/5bd63657ac71a9e5f8484ea561de572193b3317b/contracts/CRPFactory.sol#L50\\n    function newCrp(\\n        address factoryAddress,\\n        PoolParams calldata poolParams,\\n        Rights calldata rights\\n    )\\n    external\\n    returns (address);\\n}\",\"keccak256\":\"0xeec62dc0c0e4fb4790326cc9c3e13dd6d0f844bd80d88419cdf08380b3df0c3e\",\"license\":\"CAL\"},\"./contracts/pool/IConfigurableRightsPool.sol\":{\"content\":\"// SPDX-License-Identifier: CAL\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\n/// Mirrors the `PoolParams` struct normally internal to a Balancer\\n/// `ConfigurableRightsPool`.\\n/// If nothing else, this fixes errors that prevent slither from compiling when\\n/// running the security scan.\\n// solhint-disable-next-line max-line-length\\n/// https://github.com/balancer-labs/configurable-rights-pool/blob/5bd63657ac71a9e5f8484ea561de572193b3317b/contracts/ConfigurableRightsPool.sol#L47\\nstruct PoolParams {\\n    string poolTokenSymbol;\\n    string poolTokenName;\\n    address[] constituentTokens;\\n    uint[] tokenBalances;\\n    uint[] tokenWeights;\\n    uint swapFee;\\n}\\n\\n/// Mirrors the Balancer `ConfigurableRightsPool` functions relevant to\\n/// bootstrapping a pool. This is the minimal interface required for\\n/// `RedeemableERC20Pool` to function, much of the Balancer contract is elided\\n/// intentionally. Clients should use Balancer code directly.\\n// solhint-disable-next-line max-line-length\\n/// https://github.com/balancer-labs/configurable-rights-pool/blob/5bd63657ac71a9e5f8484ea561de572193b3317b/contracts/ConfigurableRightsPool.sol#L41\\ninterface IConfigurableRightsPool {\\n    // solhint-disable-next-line max-line-length\\n    // https://github.com/balancer-labs/configurable-rights-pool/blob/5bd63657ac71a9e5f8484ea561de572193b3317b/contracts/ConfigurableRightsPool.sol#L61\\n    function bPool() external view returns (address);\\n\\n    // solhint-disable-next-line max-line-length\\n    // https://github.com/balancer-labs/configurable-rights-pool/blob/5bd63657ac71a9e5f8484ea561de572193b3317b/contracts/ConfigurableRightsPool.sol#L60\\n    function bFactory() external view returns (address);\\n\\n    // solhint-disable-next-line max-line-length\\n    // https://github.com/balancer-labs/configurable-rights-pool/blob/5bd63657ac71a9e5f8484ea561de572193b3317b/contracts/ConfigurableRightsPool.sol#L318\\n    function createPool(\\n        uint initialSupply,\\n        uint minimumWeightChangeBlockPeriodParam,\\n        uint addTokenTimeLockInBlocksParam\\n    ) external;\\n\\n    // solhint-disable-next-line max-line-length\\n    // https://github.com/balancer-labs/configurable-rights-pool/blob/5bd63657ac71a9e5f8484ea561de572193b3317b/contracts/ConfigurableRightsPool.sol#L393\\n    function updateWeightsGradually(\\n        uint[] calldata newWeights,\\n        uint startBlock,\\n        uint endBlock\\n    ) external;\\n\\n    // solhint-disable-next-line max-line-length\\n    // https://github.com/balancer-labs/configurable-rights-pool/blob/5bd63657ac71a9e5f8484ea561de572193b3317b/contracts/ConfigurableRightsPool.sol#L581\\n    function exitPool(uint poolAmountIn, uint[] calldata minAmountsOut)\\n        external;\\n}\",\"keccak256\":\"0x5456cce4c09dcb56b97fd8898a69d80b93dbcc3aa1134b2d32433b46cff4894a\",\"license\":\"CAL\"},\"./contracts/pool/IRightsManager.sol\":{\"content\":\"// SPDX-License-Identifier: CAL\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\n// Mirrors `Rights` from Balancer `configurable-rights-pool` repo.\\n// As we do not include balancer contracts as a dependency, we need to ensure\\n// that any calculations or values that cross the interface to their system are\\n// identical.\\n// solhint-disable-next-line max-line-length\\n// https://github.com/balancer-labs/configurable-rights-pool/blob/5bd63657ac71a9e5f8484ea561de572193b3317b/libraries/RightsManager.sol#L29\\nstruct Rights {\\n    bool canPauseSwapping;\\n    bool canChangeSwapFee;\\n    bool canChangeWeights;\\n    bool canAddRemoveTokens;\\n    bool canWhitelistLPs;\\n    bool canChangeCap;\\n}\",\"keccak256\":\"0xbc88ad5210160aa1c8a2564c0d8bf3efdbef0b253f6f5a4ebc6fef15541227d6\",\"license\":\"CAL\"}},\"version\":1}"
}