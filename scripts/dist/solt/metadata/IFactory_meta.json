{
    "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"NewContract\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data_\",\"type\":\"bytes\"}],\"name\":\"createChild\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maybeChild_\",\"type\":\"address\"}],\"name\":\"isChild\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createChild(bytes)\":{\"params\":{\"data_\":\"Domain specific data for the child contract constructor.\"},\"returns\":{\"_0\":\"New child contract address.\"}},\"isChild(address)\":{\"params\":{\"maybeChild_\":\"Address to check registration for.\"},\"returns\":{\"_0\":\"`true` if address was deployed by this contract factory, otherwise `false`.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"NewContract(address)\":{\"notice\":\"Whenever a new child contract is deployed, a `NewContract` event containing the new child contract address MUST be emitted.\"}},\"kind\":\"user\",\"methods\":{\"createChild(bytes)\":{\"notice\":\"Creates a new child contract.\"},\"isChild(address)\":{\"notice\":\"Checks if address is registered as a child contract of this factory. Addresses that were not deployed by `createChild` MUST NOT return `true` from `isChild`. This is CRITICAL to the security guarantees for any contract implementing `IFactory`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"./contracts/factory/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"./contracts/factory/IFactory.sol\":{\"content\":\"// SPDX-License-Identifier: CAL\\npragma solidity ^0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\ninterface IFactory {\\n    /// Whenever a new child contract is deployed, a `NewContract` event\\n    /// containing the new child contract address MUST be emitted.\\n    event NewContract(address indexed _contract);\\n\\n    /// Creates a new child contract.\\n    ///\\n    /// @param data_ Domain specific data for the child contract constructor.\\n    /// @return New child contract address.\\n    function createChild(bytes calldata data_) external returns(address);\\n\\n    /// Checks if address is registered as a child contract of this factory.\\n    ///\\n    /// Addresses that were not deployed by `createChild` MUST NOT return\\n    /// `true` from `isChild`. This is CRITICAL to the security guarantees for\\n    /// any contract implementing `IFactory`.\\n    ///\\n    /// @param maybeChild_ Address to check registration for.\\n    /// @return `true` if address was deployed by this contract factory,\\n    /// otherwise `false`.\\n    function isChild(address maybeChild_) external returns(bool);\\n}\",\"keccak256\":\"0x382390501ea7d20ac2624e2c9cc8628867b8234b2566ae3f6dd3ebd8343f0c26\",\"license\":\"CAL\"}},\"version\":1}"
}