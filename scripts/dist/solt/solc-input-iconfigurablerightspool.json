{
    "language": "Solidity",
    "sources": {
        "./contracts/configurable-rights-pool/interfaces/IConfigurableRightsPool.sol": {
            "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.6.12;\n\n// Interface declarations\n\n// Introduce to avoid circularity (otherwise, the CRP and SmartPoolManager include each other)\n// Removing circularity allows flattener tools to work, which enables Etherscan verification\ninterface IConfigurableRightsPool {\n    function mintPoolShareFromLib(uint amount) external;\n    function pushPoolShareFromLib(address to, uint amount) external;\n    function pullPoolShareFromLib(address from, uint amount) external;\n    function burnPoolShareFromLib(uint amount) external;\n    function totalSupply() external view returns (uint);\n    function getController() external view returns (address);\n}\n"
        }
    },
    "settings": {
        "metadata": {
            "useLiteralContent": true
        },
        "optimizer": {
            "enabled": true,
            "runs": 200
        },
        "outputSelection": {
            "*": {
                "*": [
                    "abi",
                    "evm.bytecode",
                    "evm.deployedBytecode",
                    "evm.methodIdentifiers"
                ],
                "": [
                    "id",
                    "ast"
                ]
            }
        }
    }
}