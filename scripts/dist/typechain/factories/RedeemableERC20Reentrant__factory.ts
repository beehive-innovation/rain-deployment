/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RedeemableERC20Reentrant,
  RedeemableERC20ReentrantInterface,
} from "../RedeemableERC20Reentrant";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RedeemableERC20",
        name: "redeemableERC20Contract_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "addFreezable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "freezables",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620013c7380380620013c7833981810160405260208110156200003757600080fd5b5051604080518082018252600b81526a55534420436c617373696360a81b602082810191825283518085019094526005845264555344434360d81b908401528151919291620000899160039162000426565b5080516200009f90600490602084019062000426565b50506005805460ff1916601217905550620000bb6006620000f4565b620000ce3366038d7ea4c680006200010a565b600780546001600160a01b0319166001600160a01b0392909216919091179055620004c2565b6005805460ff191660ff92909216919091179055565b6001600160a01b03821662000166576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620001746000838362000219565b62000190816002546200035460201b620007331790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620001c39183906200073362000354821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b62000231838383620003b660201b620007941760201c565b6001600160a01b038316158015906200025757506007546001600160a01b038481169116145b156200034f576040805160018082528183019092526060916020808301908036833701905050905030816000815181106200028e57fe5b6001600160a01b0392831660209182029290920181019190915260075460408051637b3bef4b60e11b81526024810187905260048101918252855160448201528551929094169363f677de969386938893928392606490910191868201910280838360005b838110156200030d578181015183820152602001620002f3565b505050509050019350505050600060405180830381600087803b1580156200033457600080fd5b505af115801562000349573d6000803e3d6000fd5b50505050505b505050565b600082820183811015620003af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b620003ce8383836200034f60201b6200061b1760201c565b6001600160a01b03821660009081526006602052604090205460ff16156200034f576040805162461bcd60e51b8152602060048201526006602482015265232927ad22a760d11b604482015290519081900360640190fd5b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200046957805160ff191683800117855562000499565b8280016001018555821562000499579182015b82811115620004995782518255916020019190600101906200047c565b50620004a7929150620004ab565b5090565b5b80821115620004a75760008155600101620004ac565b610ef580620004d26000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806348422faa116100a2578063902d55a511610071578063902d55a51461032c57806395d89b4114610334578063a457c2d71461033c578063a9059cbb14610368578063dd62ed3e146103945761010b565b806348422faa1461028e5780635bb9058b146102b457806370a08231146102da57806379cc6790146103005761010b565b80632e0f2625116100de5780632e0f26251461021d578063313ce5671461023b578063395093511461024357806342966c681461026f5761010b565b806306fdde0314610110578063095ea7b31461018d57806318160ddd146101cd57806323b872dd146101e7575b600080fd5b6101186103c2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015257818101518382015260200161013a565b50505050905090810190601f16801561017f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b9600480360360408110156101a357600080fd5b506001600160a01b038135169060200135610458565b604080519115158252519081900360200190f35b6101d5610475565b60408051918252519081900360200190f35b6101b9600480360360608110156101fd57600080fd5b506001600160a01b0381358116916020810135909116906040013561047b565b610225610502565b6040805160ff9092168252519081900360200190f35b610225610507565b6101b96004803603604081101561025957600080fd5b506001600160a01b038135169060200135610510565b61028c6004803603602081101561028557600080fd5b503561055e565b005b6101b9600480360360208110156102a457600080fd5b50356001600160a01b0316610572565b61028c600480360360208110156102ca57600080fd5b50356001600160a01b0316610587565b6101d5600480360360208110156102f057600080fd5b50356001600160a01b03166105ab565b61028c6004803603604081101561031657600080fd5b506001600160a01b0381351690602001356105c6565b6101d5610620565b61011861062b565b6101b96004803603604081101561035257600080fd5b506001600160a01b03813516906020013561068c565b6101b96004803603604081101561037e57600080fd5b506001600160a01b0381351690602001356106f4565b6101d5600480360360408110156103aa57600080fd5b506001600160a01b0381358116916020013516610708565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050505050905090565b600061046c6104656107f6565b84846107fa565b50600192915050565b60025490565b60006104888484846108e6565b6104f8846104946107f6565b6104f385604051806060016040528060288152602001610de5602891396001600160a01b038a166000908152600160205260408120906104d26107f6565b6001600160a01b031681526020810191909152604001600020549190610a41565b6107fa565b5060019392505050565b600681565b60055460ff1690565b600061046c61051d6107f6565b846104f3856001600061052e6107f6565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610733565b61056f6105696107f6565b82610ad8565b50565b60066020526000908152604090205460ff1681565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6001600160a01b031660009081526020819052604090205490565b60006105fd82604051806060016040528060248152602001610e0d602491396105f6866105f16107f6565b610708565b9190610a41565b90506106118361060b6107f6565b836107fa565b61061b8383610ad8565b505050565b66038d7ea4c6800081565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561044e5780601f106104235761010080835404028352916020019161044e565b600061046c6106996107f6565b846104f385604051806060016040528060258152602001610e9b60259139600160006106c36107f6565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610a41565b600061046c6107016107f6565b84846108e6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008282018381101561078d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b61079f83838361061b565b6001600160a01b03821660009081526006602052604090205460ff161561061b576040805162461bcd60e51b8152602060048201526006602482015265232927ad22a760d11b604482015290519081900360640190fd5b3390565b6001600160a01b03831661083f5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e776024913960400191505060405180910390fd5b6001600160a01b0382166108845760405162461bcd60e51b8152600401808060200182810382526022815260200180610d9d6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661092b5760405162461bcd60e51b8152600401808060200182810382526025815260200180610e526025913960400191505060405180910390fd5b6001600160a01b0382166109705760405162461bcd60e51b8152600401808060200182810382526023815260200180610d586023913960400191505060405180910390fd5b61097b838383610bd4565b6109b881604051806060016040528060268152602001610dbf602691396001600160a01b0386166000908152602081905260409020549190610a41565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546109e79082610733565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ad05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610a95578181015183820152602001610a7d565b50505050905090810190601f168015610ac25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216610b1d5760405162461bcd60e51b8152600401808060200182810382526021815260200180610e316021913960400191505060405180910390fd5b610b2982600083610bd4565b610b6681604051806060016040528060228152602001610d7b602291396001600160a01b0385166000908152602081905260409020549190610a41565b6001600160a01b038316600090815260208190526040902055600254610b8c9082610cfa565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610bdf838383610794565b6001600160a01b03831615801590610c0457506007546001600160a01b038481169116145b1561061b57604080516001808252818301909252606091602080830190803683370190505090503081600081518110610c3957fe5b6001600160a01b0392831660209182029290920181019190915260075460408051637b3bef4b60e11b81526024810187905260048101918252855160448201528551929094169363f677de969386938893928392606490910191868201910280838360005b83811015610cb6578181015183820152602001610c9e565b505050509050019350505050600060405180830381600087803b158015610cdc57600080fd5b505af1158015610cf0573d6000803e3d6000fd5b5050505050505050565b600082821115610d51576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209bf439f78f9a35cff00f5eb3af4956e50adf04ed0340cd078570df96ea806a2264736f6c634300060c0033";

export class RedeemableERC20Reentrant__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    redeemableERC20Contract_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RedeemableERC20Reentrant> {
    return super.deploy(
      redeemableERC20Contract_,
      overrides || {}
    ) as Promise<RedeemableERC20Reentrant>;
  }
  getDeployTransaction(
    redeemableERC20Contract_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      redeemableERC20Contract_,
      overrides || {}
    );
  }
  attach(address: string): RedeemableERC20Reentrant {
    return super.attach(address) as RedeemableERC20Reentrant;
  }
  connect(signer: Signer): RedeemableERC20Reentrant__factory {
    return super.connect(signer) as RedeemableERC20Reentrant__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedeemableERC20ReentrantInterface {
    return new utils.Interface(_abi) as RedeemableERC20ReentrantInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RedeemableERC20Reentrant {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RedeemableERC20Reentrant;
  }
}
