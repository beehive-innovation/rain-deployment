/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20TransferTier,
  ERC20TransferTierInterface,
} from "../ERC20TransferTier";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "erc20_",
        type: "address",
      },
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum ITier.Tier",
        name: "startTier",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "enum ITier.Tier",
        name: "endTier",
        type: "uint8",
      },
    ],
    name: "TierChange",
    type: "event",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "report",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "reports",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "enum ITier.Tier",
        name: "endTier_",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "setTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tierValues",
    outputs: [
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101a060405234801561001157600080fd5b50604051610edc380380610edc833981810160405261012081101561003557600080fd5b50805160208201516080818152604084015160a081815260608087015160c08181529488015160e081815293890151610100818152968a0151610120819052948a015161014081905296909901516101608190529288901b6001600160601b031916610180529597939690959491906001600160a01b0316610dde6100fe600039806104a352806106ca528061071c52508061047a52508061045452508061042e5250806104085250806103e25250806103bc5250806103965250806103735250610dde6000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806370230b391161005057806370230b391461017e578063785e9e86146101bf578063e053ea31146101f057610067565b8063252210e31461006c57806352dab69d146100b1575b600080fd5b61009f6004803603602081101561008257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610223565b60408051918252519081900360200190f35b61017c600480360360608110156100c757600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235169160ff6020820135169181019060608101604082013564010000000081111561010757600080fd5b82018360208201111561011957600080fd5b8035906020019184600183028401116401000000008311171561013b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610235945050505050565b005b610186610369565b604051808261010080838360005b838110156101ac578181015183820152602001610194565b5050505090500191505060405180910390f35b6101c76104a1565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61009f6004803603602081101561020657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104c5565b60006020819052908152604090205481565b600082600881111561024357fe5b14156102b057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f5345545f5a45524f5f5449455200000000000000000000000000000000000000604482015290519081900360640190fd5b60006102bb846104c5565b905060006102c98243610542565b90506102d78282864361058f565b73ffffffffffffffffffffffffffffffffffffffff861660009081526020819052604090205583600881111561030957fe5b81600881111561031557fe5b60405173ffffffffffffffffffffffffffffffffffffffff8816907fc47100edc32c382b56a1def2d144f6ab67d8f50be6efa18b329d2e82ee875db290600090a4610362858286866105d2565b5050505050565b610371610d39565b7f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201527f000000000000000000000000000000000000000000000000000000000000000060808201527f000000000000000000000000000000000000000000000000000000000000000060a08201527f000000000000000000000000000000000000000000000000000000000000000060c08201527f000000000000000000000000000000000000000000000000000000000000000060e082015290565b7f000000000000000000000000000000000000000000000000000000000000000081565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040812054610515577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61053c565b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020545b92915050565b6000805b6008811015610585578263ffffffff168160200285901c63ffffffff16111561057d5780600881111561057557fe5b91505061053c565b600101610546565b5060089392505050565b600083600881111561059d57fe5b8360088111156105a957fe5b106105bf576105ba8585858561074c565b6105c9565b6105c9858461079e565b95945050505050565b8260088111156105de57fe5b8260088111156105ea57fe5b11610673573373ffffffffffffffffffffffffffffffffffffffff85161461067357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f44454c4547415445445f544945525f4c4f535300000000000000000000000000604482015290519081900360640190fd5b600061067e846107e4565b9050600061068b846107e4565b90508181141561069c575050610746565b818111156106f7576106f233306106b3848661082b565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169291906108a2565b610743565b61074386610705848461082b565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169190610937565b50505b50505050565b600080600085600881111561075d57fe5b90505b84600881111561076c57fe5b8110156107935763ffffffff6020820290811b199790971684881b17969150600101610760565b509495945050505050565b6000808260088111156107ad57fe5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60209190910290811c901b841791505092915050565b6000808260088111156107f357fe5b116107ff57600061053c565b610807610369565b600183600881111561081557fe5b036008811061082057fe5b602002015192915050565b60008282111561089c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6040805173ffffffffffffffffffffffffffffffffffffffff80861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526107469085906109c9565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526109c49084906109c9565b505050565b6060610a2b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610aa19092919063ffffffff16565b8051909150156109c457808060200190516020811015610a4a57600080fd5b50516109c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610d7f602a913960400191505060405180910390fd5b6060610ab08484600085610aba565b90505b9392505050565b606082471015610b15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610d596026913960400191505060405180910390fd5b610b1e85610c75565b610b8957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310610bf357805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610bb6565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610c55576040519150601f19603f3d011682016040523d82523d6000602084013e610c5a565b606091505b5091509150610c6a828286610c7b565b979650505050505050565b3b151590565b60608315610c8a575081610ab3565b825115610c9a5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cfe578181015183820152602001610ce6565b50505050905090810190601f168015610d2b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b604051806101000160405280600890602082028036833750919291505056fe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212204a1f2f281619bc9232a8e1ce2a2da6c5db3fba7dc5499bdac9c7469efcc4cd1664736f6c634300060c0033";

export class ERC20TransferTier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    erc20_: string,
    tierValues_: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20TransferTier> {
    return super.deploy(
      erc20_,
      tierValues_,
      overrides || {}
    ) as Promise<ERC20TransferTier>;
  }
  getDeployTransaction(
    erc20_: string,
    tierValues_: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(erc20_, tierValues_, overrides || {});
  }
  attach(address: string): ERC20TransferTier {
    return super.attach(address) as ERC20TransferTier;
  }
  connect(signer: Signer): ERC20TransferTier__factory {
    return super.connect(signer) as ERC20TransferTier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TransferTierInterface {
    return new utils.Interface(_abi) as ERC20TransferTierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20TransferTier {
    return new Contract(address, _abi, signerOrProvider) as ERC20TransferTier;
  }
}
