/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TMath, TMathInterface } from "../TMath";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "BONE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "BPOW_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "EXIT_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "INIT_POOL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MAX_BOUND_TOKENS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MAX_BPOW_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MAX_IN_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MAX_OUT_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MAX_TOTAL_WEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MAX_WEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MIN_BALANCE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MIN_BOUND_TOKENS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MIN_BPOW_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MIN_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "MIN_WEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenBalanceIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenWeightIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenBalanceOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenWeightOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFee",
        type: "uint256",
      },
    ],
    name: "calcInGivenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmountIn",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenBalanceIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenWeightIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenBalanceOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenWeightOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFee",
        type: "uint256",
      },
    ],
    name: "calcOutGivenIn",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenBalanceOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenWeightOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFee",
        type: "uint256",
      },
    ],
    name: "calcPoolInGivenSingleOut",
    outputs: [
      {
        internalType: "uint256",
        name: "poolAmountIn",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenBalanceIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenWeightIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFee",
        type: "uint256",
      },
    ],
    name: "calcPoolOutGivenSingleIn",
    outputs: [
      {
        internalType: "uint256",
        name: "poolAmountOut",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenBalanceIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenWeightIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFee",
        type: "uint256",
      },
    ],
    name: "calcSingleInGivenPoolOut",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmountIn",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenBalanceOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenWeightOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFee",
        type: "uint256",
      },
    ],
    name: "calcSingleOutGivenPoolIn",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmountOut",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "tokenBalanceIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenWeightIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenBalanceOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenWeightOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFee",
        type: "uint256",
      },
    ],
    name: "calcSpotPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "calc_badd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "calc_bdiv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "calc_bfloor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "calc_bmul",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
    ],
    name: "calc_bpow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "precision",
        type: "uint256",
      },
    ],
    name: "calc_bpowApprox",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "calc_bpowi",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "calc_bsub",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "calc_bsubSign",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "calc_btoi",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getColor",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611023806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c65760003560e01c8063b0e0d136116100fa578063c36596a61161009d578063c36596a614610233578063c6580d121461048c578063c6b3199d14610494578063cd094b14146104b1578063e4a28a52146101cb578063ec093021146104d4578063f5f5b148146104dc578063f760324b146104ff578063f8d6aed414610522576101c6565b8063b0e0d136146103d0578063b58d3e70146103d8578063b65fcf40146103f5578063b7b800a414610431578063ba019dab14610439578063ba9530a614610441578063bc063e1a1461047c578063bc694ea214610484576101c6565b806382f652ad1161016d57806382f652ad146102a75780638656b653146102e2578063867378c51461031d578063872289ab1461032557806389298012146103485780639381cd2b14610383578063992e2a921461038b5780639a86139b14610393578063a221ee491461039b576101c6565b806309a3bbe4146101cb578063189d00ca146101e55780631bcaf56f146101ed5780631fdee40714610210578063218b538214610233578063311243721461023b5780635c1bbaf71461026457806376c7a3c71461029f575b600080fd5b6101d361055d565b60408051918252519081900360200190f35b6101d361056a565b6101d36004803603604081101561020357600080fd5b508035906020013561057e565b6101d36004803603604081101561022657600080fd5b5080359060200135610593565b6101d361059f565b6101d36004803603606081101561025157600080fd5b50803590602081013590604001356105ab565b6101d3600480360360c081101561027a57600080fd5b5080359060208101359060408101359060608101359060808101359060a001356105c0565b6101d3610678565b6101d3600480360360c08110156102bd57600080fd5b5080359060208101359060408101359060608101359060808101359060a0013561068a565b6101d3600480360360c08110156102f857600080fd5b5080359060208101359060408101359060608101359060808101359060a00135610749565b6101d36107ea565b6101d36004803603604081101561033b57600080fd5b50803590602001356107fe565b6101d3600480360360c081101561035e57600080fd5b5080359060208101359060408101359060608101359060808101359060a0013561080a565b6101d36108ba565b6101d36108c7565b6101d36108d3565b6101d3600480360360a08110156103b157600080fd5b50803590602081013590604081013590606081013590608001356108e0565b6101d3610945565b6101d3600480360360208110156103ee57600080fd5b503561094a565b6104186004803603604081101561040b57600080fd5b5080359060200135610955565b6040805192835290151560208301528051918290030190f35b6101d361096e565b6101d3610973565b6101d3600480360360c081101561045757600080fd5b5080359060208101359060408101359060608101359060808101359060a00135610978565b6101d36109f9565b6101d3610a09565b6101d3610a15565b6101d3600480360360208110156104aa57600080fd5b5035610a1a565b6101d3600480360360408110156104c757600080fd5b5080359060200135610a25565b6101d3610a31565b6101d3600480360360408110156104f257600080fd5b5080359060200135610a41565b6101d36004803603604081101561051557600080fd5b5080359060200135610a4d565b6101d3600480360360c081101561053857600080fd5b5080359060208101359060408101359060608101359060808101359060a00135610a59565b6802b5e3af16b188000081565b6402540be400670de0b6b3a76400005b0481565b600061058a8383610adc565b90505b92915050565b600061058a8383610b3e565b670de0b6b3a764000081565b60006105b8848484610c51565b949350505050565b6000806105cd8786610b3e565b905060006105db8786610d2f565b905060006105e98289610b3e565b905060006105ff670de0b6b3a764000085610b3e565b9050600061060d8383610d7c565b9050600061061b828e610e8a565b90506000610629828f610adc565b90506000610648610642670de0b6b3a76400008a610adc565b8b610e8a565b905061066582610660670de0b6b3a764000084610adc565b610b3e565b9f9e505050505050505050505050505050565b620f4240670de0b6b3a764000061057a565b6000806106978786610b3e565b905060006106ad670de0b6b3a764000083610adc565b905060006106bb8286610e8a565b905060006106d587610660670de0b6b3a764000085610adc565b905060006106e38c83610adc565b905060006106f1828e610b3e565b905060006106ff8288610d7c565b9050600061070d828e610e8a565b9050600061071b8e83610adc565b905061073481610660670de0b6b3a76400006000610adc565b99505050505050505050509695505050505050565b6000806107568786610b3e565b9050600061077561076f670de0b6b3a764000084610adc565b85610e8a565b905060006107948661078f670de0b6b3a764000085610adc565b610e8a565b905060006107a28b83610d2f565b905060006107b0828d610b3e565b905060006107be8287610d7c565b905060006107cc828d610e8a565b90506107d8818d610adc565b9e9d5050505050505050505050505050565b64e8d4a51000670de0b6b3a764000061057a565b600061058a8383610d2f565b6000806108178786610b3e565b905060006108328561078f670de0b6b3a76400006000610adc565b905060006108408883610adc565b9050600061084e828a610b3e565b9050600061086d82610868670de0b6b3a764000088610b3e565b610d7c565b9050600061087b828e610e8a565b905060006108898e83610adc565b905060006108a2610642670de0b6b3a76400008a610adc565b90506106658261078f670de0b6b3a764000084610adc565b68056bc75e2d6310000081565b6704a03ce68d21555681565b6542524f4e5a4560d01b90565b6000806108ed8787610b3e565b905060006108fb8686610b3e565b905060006109098383610b3e565b9050600061092b670de0b6b3a7640000610660670de0b6b3a764000089610adc565b90506109378282610e8a565b9a9950505050505050505050565b600881565b600061058d82610f4c565b6000806109628484610f67565b915091505b9250929050565b600281565b600181565b6000806109858786610b3e565b9050600061099b670de0b6b3a764000085610adc565b90506109a78582610e8a565b905060006109b98a6106608c85610d2f565b905060006109c78285610d7c565b905060006109dd670de0b6b3a764000083610adc565b90506109e98a82610e8a565b9c9b505050505050505050505050565b600a670de0b6b3a764000061057a565b671bc16d674ec7ffff81565b600081565b600061058d82610f89565b600061058a8383610e8a565b6002670de0b6b3a764000061057a565b600061058a8383610d7c565b600061058a8383610f97565b600080610a668588610b3e565b90506000610a748786610adc565b90506000610a828883610b3e565b90506000610a908285610d7c565b9050610aa481670de0b6b3a7640000610adc565b9050610ab8670de0b6b3a764000087610adc565b9450610acd610ac78c83610e8a565b86610b3e565b9b9a5050505050505050505050565b6000806000610aeb8585610f67565b915091508015610b36576040805162461bcd60e51b81526020600482015260116024820152704552525f5355425f554e444552464c4f5760781b604482015290519081900360640190fd5b509392505050565b600081610b81576040805162461bcd60e51b815260206004820152600c60248201526b4552525f4449565f5a45524f60a01b604482015290519081900360640190fd5b670de0b6b3a76400008302831580610ba95750670de0b6b3a7640000848281610ba657fe5b04145b610bed576040805162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b604482015290519081900360640190fd5b60028304810181811015610c3b576040805162461bcd60e51b815260206004820152601060248201526f11549497d1125597d25395115493905360821b604482015290519081900360640190fd5b6000848281610c4657fe5b049695505050505050565b6000828180610c6887670de0b6b3a7640000610f67565b9092509050670de0b6b3a764000080600060015b888410610d20576000670de0b6b3a764000082029050600080610cb08a610cab85670de0b6b3a7640000610adc565b610f67565b91509150610cc28761078f848c610e8a565b9650610cce8784610b3e565b965086610cdd57505050610d20565b8715610ce7579315935b8015610cf1579315935b8415610d0857610d018688610adc565b9550610d15565b610d128688610d2f565b95505b505050600101610c7c565b50909998505050505050505050565b60008282018381101561058a576040805162461bcd60e51b815260206004820152601060248201526f4552525f4144445f4f564552464c4f5760801b604482015290519081900360640190fd5b60006001831015610dcc576040805162461bcd60e51b81526020600482015260156024820152744552525f42504f575f424153455f544f4f5f4c4f5760581b604482015290519081900360640190fd5b671bc16d674ec7ffff831115610e22576040805162461bcd60e51b815260206004820152601660248201527508aa4a4be84a09eaebe8482a68abea89e9ebe90928e960531b604482015290519081900360640190fd5b6000610e2d83610f4c565b90506000610e3b8483610adc565b90506000610e5186610e4c85610f89565b610f97565b905081610e6257925061058d915050565b6000610e7387846305f5e100610c51565b9050610e7f8282610e8a565b979650505050505050565b6000828202831580610ea4575082848281610ea157fe5b04145b610ee8576040805162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b604482015290519081900360640190fd5b6706f05b59d3b20000810181811015610f3b576040805162461bcd60e51b815260206004820152601060248201526f4552525f4d554c5f4f564552464c4f5760801b604482015290519081900360640190fd5b6000670de0b6b3a764000082610c46565b6000670de0b6b3a7640000610f6083610f89565b0292915050565b600080828410610f7d5750508082036000610967565b50508181036001610967565b670de0b6b3a7640000900490565b60008060028306610fb057670de0b6b3a7640000610fb2565b835b90506002830492505b821561058a57610fcb8485610e8a565b93506002830615610fe357610fe08185610e8a565b90505b600283049250610fbb56fea265627a7a7231582021ff35915fa55ec4f558a1366b1ca9bf3820b00ee87c467ea40f18a97393f9d264736f6c634300050c0032";

export class TMath__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TMath> {
    return super.deploy(overrides || {}) as Promise<TMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TMath {
    return super.attach(address) as TMath;
  }
  connect(signer: Signer): TMath__factory {
    return super.connect(signer) as TMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TMathInterface {
    return new utils.Interface(_abi) as TMathInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TMath {
    return new Contract(address, _abi, signerOrProvider) as TMath;
  }
}
