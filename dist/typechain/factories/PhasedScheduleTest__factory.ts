/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PhasedScheduleTest,
  PhasedScheduleTestInterface,
} from "../PhasedScheduleTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "newPhaseBlock_",
        type: "uint32",
      },
    ],
    name: "PhaseShiftScheduled",
    type: "event",
  },
  {
    inputs: [],
    name: "UNINITIALIZED",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[8]",
        name: "phaseBlocks_",
        type: "uint32[8]",
      },
      {
        internalType: "enum Phase",
        name: "phase_",
        type: "uint8",
      },
    ],
    name: "blockNumberForPhase",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPhase",
    outputs: [
      {
        internalType: "enum Phase",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[8]",
        name: "phaseBlocks_",
        type: "uint32[8]",
      },
      {
        internalType: "uint32",
        name: "blockNumber_",
        type: "uint32",
      },
    ],
    name: "phaseAtBlockNumber",
    outputs: [
      {
        internalType: "enum Phase",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "phaseBlocks",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "nextPhaseBlock_",
        type: "uint32",
      },
    ],
    name: "testScheduleNextPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060005b60088110156100715763ffffffff6000826008811061003557610035610077565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555080806100699061008d565b915050610014565b506100b6565b634e487b7160e01b600052603260045260246000fd5b60006000198214156100af57634e487b7160e01b600052601160045260246000fd5b5060010190565b6107cf806100c56000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806345bdfa8a1161005057806345bdfa8a146100bd57806381e45d9a146100e55780639923c94b146100f057600080fd5b8063055ad42e1461007757806334c1df75146100955780633bd126dc146100a8575b600080fd5b61007f610103565b60405161008c9190610557565b60405180910390f35b61007f6100a33660046105e0565b61016d565b6100bb6100b6366004610675565b6101dd565b005b6100d06100cb366004610690565b6101e9565b60405163ffffffff909116815260200161008c565b6100d063ffffffff81565b6100d06100fe3660046106d2565b61024c565b60408051610100810191829052600091610168919083906008908280855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161012157905050505050504361016d565b905090565b6000805b60088110156101d05783816008811061018c5761018c6106eb565b602002015163ffffffff168363ffffffff1610156101be578060088111156101b6576101b6610528565b9150506101d7565b806101c881610749565b915050610171565b5060085b90505b92915050565b6101e68161027c565b50565b6000808260088111156101fe576101fe610528565b1161020a5760006101d4565b82600183600881111561021f5761021f610528565b6102299190610782565b60088110610239576102396106eb565b6020020160208101906101d49190610675565b6000816008811061025c57600080fd5b60089182820401919006600402915054906101000a900463ffffffff1681565b8063ffffffff164363ffffffff1611156102f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4e4558545f424c4f434b5f50415354000000000000000000000000000000000060448201526064015b60405180910390fd5b63ffffffff81811610610366576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4e4558545f424c4f434b5f554e494e495449414c495a4544000000000000000060448201526064016102ee565b6000610370610103565b600881111561038157610381610528565b905060008160088110610396576103966106eb565b60088104919091015460079091166004026101000a900463ffffffff9081161461041c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4558545f424c4f434b5f53455400000000000000000000000000000000000060448201526064016102ee565b61042582610499565b8160008260088110610439576104396106eb565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff1602179055508163ffffffff167f260aac5b840edc27b89fdf50e91311a413363a400959466e1049e6d071b8cee260405160405180910390a25050565b6104a16104a5565b6101e65b6000806104b0610103565b60088111156104c1576104c1610528565b146101e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4241445f5048415345000000000000000000000000000000000000000000000060448201526064016102ee565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160098310610592577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b803563ffffffff811681146105db57600080fd5b919050565b60008061012083850312156105f457600080fd5b83601f84011261060357600080fd5b60405161010080820182811067ffffffffffffffff8211171561062857610628610598565b6040528401818682111561063b57600080fd5b855b8281101561065c5761064e816105c7565b82526020918201910161063d565b505081935061066a816105c7565b925050509250929050565b60006020828403121561068757600080fd5b6101d4826105c7565b60008061012083850312156106a457600080fd5b6101008301848111156106b657600080fd5b83925035600981106106c757600080fd5b809150509250929050565b6000602082840312156106e457600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561077b5761077b61071a565b5060010190565b6000828210156107945761079461071a565b50039056fea2646970667358221220ad89335b70f3f3a14e7c6bd1e8b888264c39cfde455acc3a2f60e808fbd4449f64736f6c634300080a0033";

export class PhasedScheduleTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhasedScheduleTest> {
    return super.deploy(overrides || {}) as Promise<PhasedScheduleTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PhasedScheduleTest {
    return super.attach(address) as PhasedScheduleTest;
  }
  connect(signer: Signer): PhasedScheduleTest__factory {
    return super.connect(signer) as PhasedScheduleTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhasedScheduleTestInterface {
    return new utils.Interface(_abi) as PhasedScheduleTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhasedScheduleTest {
    return new Contract(address, _abi, signerOrProvider) as PhasedScheduleTest;
  }
}
