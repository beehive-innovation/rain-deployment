/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PhasedScheduleTest,
  PhasedScheduleTestInterface,
} from "../PhasedScheduleTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "newPhaseBlock_",
        type: "uint32",
      },
    ],
    name: "PhaseShiftScheduled",
    type: "event",
  },
  {
    inputs: [],
    name: "UNINITIALIZED",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[8]",
        name: "phaseBlocks_",
        type: "uint32[8]",
      },
      {
        internalType: "enum Phase",
        name: "phase_",
        type: "uint8",
      },
    ],
    name: "blockNumberForPhase",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPhase",
    outputs: [
      {
        internalType: "enum Phase",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[8]",
        name: "phaseBlocks_",
        type: "uint32[8]",
      },
      {
        internalType: "uint32",
        name: "blockNumber_",
        type: "uint32",
      },
    ],
    name: "phaseAtBlockNumber",
    outputs: [
      {
        internalType: "enum Phase",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "phaseBlocks",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "nextPhaseBlock_",
        type: "uint32",
      },
    ],
    name: "testScheduleNextPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61018060405263ffffffff608081815260a082905260c082905260e082905261010082905261012082905261014082905261016091909152610045906000906008610058565b5034801561005257600080fd5b50610110565b6001830191839082156100e45791602002820160005b838211156100b257835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030261006e565b80156100e25782816101000a81549063ffffffff02191690556004016020816003010492830192600103026100b2565b505b506100f09291506100f4565b5090565b5b808211156100f057805463ffffffff191681556001016100f5565b6105078061011f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063055ad42e1461006757806334c1df75146100905780633bd126dc146100ea57806345bdfa8a1461010f57806381e45d9a1461014e5780639923c94b14610156575b600080fd5b61006f610173565b6040518082600881111561007f57fe5b815260200191505060405180910390f35b61006f60048036036101208110156100a757600080fd5b81019080806101000190600880602002604051908101604052809291908260086020028082843760009201919091525091945050503563ffffffff1690506101dd565b61010d6004803603602081101561010057600080fd5b503563ffffffff16610237565b005b610135600480360361012081101561012657600080fd5b5060ff61010082013516610243565b6040805163ffffffff9092168252519081900360200190f35b61013561028b565b6101356004803603602081101561016c57600080fd5b5035610291565b604080516101008101918290526000916101d8919083906008908280855b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116101915790505050505050436101dd565b905090565b6000805b600881101561022a578381600881106101f657fe5b602002015163ffffffff168363ffffffff1610156102225780600881111561021a57fe5b915050610231565b6001016101e1565b5060085b90505b92915050565b610240816102be565b50565b60008082600881111561025257fe5b1161025e57600061022e565b82600183600881111561026d57fe5b036008811061027857fe5b602002013563ffffffff16905092915050565b60001981565b6000816008811061029e57fe5b60089182820401919006600402915054906101000a900463ffffffff1681565b8063ffffffff164363ffffffff161115610311576040805162461bcd60e51b815260206004820152600f60248201526e1391561517d09313d0d2d7d41054d5608a1b604482015290519081900360640190fd5b63ffffffff8181161061036b576040805162461bcd60e51b815260206004820152601860248201527f4e4558545f424c4f434b5f554e494e495449414c495a45440000000000000000604482015290519081900360640190fd5b6000610375610173565b600881111561038057fe5b90506000816008811061038f57fe5b60088104919091015460079091166004026101000a900463ffffffff908116146103f1576040805162461bcd60e51b815260206004820152600e60248201526d1391561517d09313d0d2d7d4d15560921b604482015290519081900360640190fd5b6103fa82610468565b816000826008811061040857fe5b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff1602179055508163ffffffff167f260aac5b840edc27b89fdf50e91311a413363a400959466e1049e6d071b8cee260405160405180910390a25050565b61047061047d565b61047981610240565b6102405b600080610488610173565b600881111561049357fe5b14610240576040805162461bcd60e51b81526020600482015260096024820152684241445f504841534560b81b604482015290519081900360640190fdfea264697066735822122069c434dbc2ee52854cf9b88b84ced5731f8def1f634db769daafda506ea4036c64736f6c634300060c0033";

export class PhasedScheduleTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhasedScheduleTest> {
    return super.deploy(overrides || {}) as Promise<PhasedScheduleTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PhasedScheduleTest {
    return super.attach(address) as PhasedScheduleTest;
  }
  connect(signer: Signer): PhasedScheduleTest__factory {
    return super.connect(signer) as PhasedScheduleTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhasedScheduleTestInterface {
    return new utils.Interface(_abi) as PhasedScheduleTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhasedScheduleTest {
    return new Contract(address, _abi, signerOrProvider) as PhasedScheduleTest;
  }
}
