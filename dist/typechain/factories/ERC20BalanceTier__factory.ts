/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20BalanceTier,
  ERC20BalanceTierInterface,
} from "../ERC20BalanceTier";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "erc20_",
        type: "address",
      },
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum ITier.Tier",
        name: "startTier",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "enum ITier.Tier",
        name: "endTier",
        type: "uint8",
      },
    ],
    name: "TierChange",
    type: "event",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "report",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "enum ITier.Tier",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "setTier",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tierValues",
    outputs: [
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101a060405234801561001157600080fd5b506040516108cd3803806108cd8339810160408190526100309161009a565b80516080908152602082015160a0908152604083015160c0908152606084015160e090815292840151610100529083015161012052820151610140520151610160526001600160a01b03166101805261013a565b634e487b7160e01b600052604160045260246000fd5b6000806101208084860312156100af57600080fd5b83516001600160a01b03811681146100c657600080fd5b92506020603f850186136100d957600080fd5b60405161010081016001600160401b03811182821017156100fc576100fc610084565b60405291850191808784111561011157600080fd5b8287015b8481101561012c5780518252908301908301610115565b509497909650945050505050565b60805160a05160c05160e051610100516101205161014051610160516101805161071d6101b060003960008181608901526102de01526000610268015260006102420152600061021c015260006101f6015260006101d0015260006101aa0152600061018401526000610161015261071d6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806352dab69d1461005157806370230b3914610066578063785e9e8614610084578063e053ea31146100d0575b600080fd5b61006461005f366004610488565b6100f1565b005b61006e610157565b60405161007b919061057e565b60405180910390f35b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161007b565b6100e36100de3660046105b0565b61028f565b60405190815260200161007b565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f5345545f54494552000000000000000000000000000000000000000000000000604482015260640160405180910390fd5b61015f610411565b7f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201527f000000000000000000000000000000000000000000000000000000000000000060808201527f000000000000000000000000000000000000000000000000000000000000000060a08201527f000000000000000000000000000000000000000000000000000000000000000060c08201527f000000000000000000000000000000000000000000000000000000000000000060e082015290565b6000610355816040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152610350917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa158015610327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b9190610629565b61035b565b6103c1565b92915050565b6000805b60088110156103b857610370610157565b8160088110610381576103816105cb565b60200201518310156103a65780600881111561039f5761039f6105fa565b9392505050565b806103b081610671565b91505061035f565b50600892915050565b6000808260088111156103d6576103d66105fa565b6103e19060206106aa565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811c901b841791505092915050565b6040518061010001604052806008906020820280368337509192915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461045457600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060006060848603121561049d57600080fd5b6104a684610430565b92506020840135600981106104ba57600080fd5b9150604084013567ffffffffffffffff808211156104d757600080fd5b818601915086601f8301126104eb57600080fd5b8135818111156104fd576104fd610459565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561054357610543610459565b8160405282815289602084870101111561055c57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6101008101818360005b60088110156105a7578151835260209283019290910190600101610588565b50505092915050565b6000602082840312156105c257600080fd5b61039f82610430565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006020828403121561063b57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156106a3576106a3610642565b5060010190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156106e2576106e2610642565b50029056fea26469706673582212202a1b6fb8b94d4b361786a7a42f7414c7032ecc7724c0ce1d83bbd27845967a5a64736f6c634300080a0033";

export class ERC20BalanceTier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    erc20_: string,
    tierValues_: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20BalanceTier> {
    return super.deploy(
      erc20_,
      tierValues_,
      overrides || {}
    ) as Promise<ERC20BalanceTier>;
  }
  getDeployTransaction(
    erc20_: string,
    tierValues_: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(erc20_, tierValues_, overrides || {});
  }
  attach(address: string): ERC20BalanceTier {
    return super.attach(address) as ERC20BalanceTier;
  }
  connect(signer: Signer): ERC20BalanceTier__factory {
    return super.connect(signer) as ERC20BalanceTier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20BalanceTierInterface {
    return new utils.Interface(_abi) as ERC20BalanceTierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20BalanceTier {
    return new Contract(address, _abi, signerOrProvider) as ERC20BalanceTier;
  }
}
