/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TierByConstructionClaim,
  TierByConstructionClaimInterface,
} from "../TierByConstructionClaim";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ITier",
        name: "tierContract_",
        type: "address",
      },
      {
        internalType: "enum ITier.Tier",
        name: "minimumTier_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "constructionBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "enum ITier.Tier",
        name: "minimumTier_",
        type: "uint8",
      },
    ],
    name: "isTier",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumTier",
    outputs: [
      {
        internalType: "enum ITier.Tier",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tierContract",
    outputs: [
      {
        internalType: "contract ITier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161090e38038061090e83398101604081905261002f9161007f565b600080546001600160a01b0319166001600160a01b03841617905543600155806008811115610060576100606100c9565b6080816008811115610074576100746100c9565b8152505050506100df565b6000806040838503121561009257600080fd5b82516001600160a01b03811681146100a957600080fd5b6020840151909250600981106100be57600080fd5b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b60805161080d61010160003960008181610138015261023c015261080d6000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063bb1757cf11610050578063bb1757cf146100fb578063c6788bdd14610110578063f1ebd5dd1461013357600080fd5b80630f0af57f1461007757806377544f3314610093578063a30872db146100b6575b600080fd5b61008060015481565b6040519081526020015b60405180910390f35b6100a66100a13660046104ec565b610167565b604051901515815260200161008a565b6000546100d69073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008a565b61010e610109366004610556565b610212565b005b6100a661011e366004610636565b60026020526000908152604090205460ff1681565b61015a7f000000000000000000000000000000000000000000000000000000000000000081565b60405161008a9190610687565b600080546040517fe053ea3100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015261020492169063e053ea3190602401602060405180830381865afa1580156101da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fe91906106c8565b83610464565b600154101590505b92915050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526002602052604090205482907f00000000000000000000000000000000000000000000000000000000000000009060ff16156102cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4455504c49434154455f434c41494d000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff84166000818152600260205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517fa16751aa65ef03fb7261c0a125a84854295c191657bda7151d4396246b1bbeb4906103499086906106e1565b60405180910390a26000546040517fe053ea3100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80871660048301526103ee92879291169063e053ea3190602401602060405180830381865afa1580156103c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ea91906106c8565b5050565b6103f88282610167565b61045e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4d494e494d554d5f54494552000000000000000000000000000000000000000060448201526064016102c2565b50505050565b60008082600881111561047957610479610658565b14156104875750600061020c565b6000600183600881111561049d5761049d610658565b6104a79190610783565b6104b290602061079a565b9390931c63ffffffff169392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146104e757600080fd5b919050565b600080604083850312156104ff57600080fd5b610508836104c3565b915060208301356009811061051c57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806040838503121561056957600080fd5b610572836104c3565b9150602083013567ffffffffffffffff8082111561058f57600080fd5b818501915085601f8301126105a357600080fd5b8135818111156105b5576105b5610527565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156105fb576105fb610527565b8160405282815288602084870101111561061457600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561064857600080fd5b610651826104c3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60208101600983106106c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000602082840312156106da57600080fd5b5051919050565b600060208083528351808285015260005b8181101561070e578581018301518582016040015282016106f2565b81811115610720576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561079557610795610754565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156107d2576107d2610754565b50029056fea26469706673582212203f742729a1e491f6992677e9132806e8fa5a22062e2c51ab906f909f968a55db64736f6c634300080a0033";

export class TierByConstructionClaim__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    tierContract_: string,
    minimumTier_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TierByConstructionClaim> {
    return super.deploy(
      tierContract_,
      minimumTier_,
      overrides || {}
    ) as Promise<TierByConstructionClaim>;
  }
  getDeployTransaction(
    tierContract_: string,
    minimumTier_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tierContract_,
      minimumTier_,
      overrides || {}
    );
  }
  attach(address: string): TierByConstructionClaim {
    return super.attach(address) as TierByConstructionClaim;
  }
  connect(signer: Signer): TierByConstructionClaim__factory {
    return super.connect(signer) as TierByConstructionClaim__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TierByConstructionClaimInterface {
    return new utils.Interface(_abi) as TierByConstructionClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TierByConstructionClaim {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TierByConstructionClaim;
  }
}
