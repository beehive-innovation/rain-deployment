/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ClaimERC1155Test,
  ClaimERC1155TestInterface,
} from "../ClaimERC1155Test";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "redeemableToken_",
        type: "address",
      },
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum ITier.Tier",
        name: "startTier",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "enum ITier.Tier",
        name: "endTier",
        type: "uint8",
      },
    ],
    name: "TierChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "ART",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GOOD_ART",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "constructionBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "enum ITier.Tier",
        name: "minimumTier_",
        type: "uint8",
      },
    ],
    name: "isTier",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumTier",
    outputs: [
      {
        internalType: "enum ITier.Tier",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "report",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "enum ITier.Tier",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "setTier",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tierContract",
    outputs: [
      {
        internalType: "contract ITier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tierValues",
    outputs: [
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101c06040523480156200001257600080fd5b506040516200223d3803806200223d8339810160408190526200003591620001c2565b604080518082018252601d81527f68747470733a2f2f6578616d706c652e636f6d2f7b69647d2e6a736f6e000000602080830191909152835160809081529084015160a09081529284015160c0908152606085015160e090815291850151610100529284015161012052918301516101405290820151610160526001600160a01b03831661018052600080546001600160a01b031916301790554360015560036101a052620000e481620000ed565b505050620002a8565b80516200010290600590602084019062000106565b5050565b82805462000114906200026b565b90600052602060002090601f01602090048101928262000138576000855562000183565b82601f106200015357805160ff191683800117855562000183565b8280016001018555821562000183579182015b828111156200018357825182559160200191906001019062000166565b506200019192915062000195565b5090565b5b8082111562000191576000815560010162000196565b634e487b7160e01b600052604160045260246000fd5b600080610120808486031215620001d857600080fd5b83516001600160a01b0381168114620001f057600080fd5b92506020603f850186136200020457600080fd5b60405161010081016001600160401b03811182821017156200022a576200022a620001ac565b6040529185019180878411156200024057600080fd5b8287015b848110156200025d578051825290830190830162000244565b509497909650945050505050565b600181811c908216806200028057607f821691505b60208210811415620002a257634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a051611f0b6200033260003960008181610311015261097601526000818161021f0152610b20015260006107d8015260006107b20152600061078c01526000610766015260006107400152600061071a015260006106f4015260006106d10152611f0b6000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c8063785e9e86116100ad578063c6788bdd11610071578063c6788bdd1461029a578063e053ea31146102bd578063e985e9c5146102d0578063f1ebd5dd1461030c578063f242432a1461034057600080fd5b8063785e9e861461021a5780639cb84a0114610259578063a22cb46514610261578063a30872db14610274578063bb1757cf1461028757600080fd5b80633acf301b116100f45780633acf301b146101b75780634e1273f4146101bf57806352dab69d146101df57806370230b39146101f257806377544f331461020757600080fd5b8062fdd58e1461013057806301ffc9a7146101565780630e89341c146101795780630f0af57f146101995780632eb2c2d6146101a2575b600080fd5b61014361013e366004611517565b610353565b6040519081526020015b60405180910390f35b61016961016436600461155a565b6103ef565b604051901515815260200161014d565b61018c610187366004611577565b61043f565b60405161014d91906115dd565b61014360015481565b6101b56101b036600461173c565b6104d3565b005b610143600181565b6101d26101cd3660046117e6565b61056a565b60405161014d91906118ec565b6101b56101ed36600461190e565b610694565b6101fa6106c7565b60405161014d919061196c565b61016961021536600461199e565b6107ff565b6102417f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161014d565b610143600081565b6101b561026f3660046119d1565b610882565b600054610241906001600160a01b031681565b6101b5610295366004611a0d565b610959565b6101696102a8366004611a51565b60026020526000908152604090205460ff1681565b6101436102cb366004611a51565b610af7565b6101696102de366004611a6c565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6103337f000000000000000000000000000000000000000000000000000000000000000081565b60405161014d9190611aac565b6101b561034e366004611ad4565b610b97565b60006001600160a01b0383166103c45760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060008181526003602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061042057506001600160e01b031982166303a24d0760e21b145b806103e957506301ffc9a760e01b6001600160e01b03198316146103e9565b60606005805461044e90611b39565b80601f016020809104026020016040519081016040528092919081815260200182805461047a90611b39565b80156104c75780601f1061049c576101008083540402835291602001916104c7565b820191906000526020600020905b8154815290600101906020018083116104aa57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806104ef57506104ef85336102de565b6105565760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016103bb565b6105638585858585610c1e565b5050505050565b606081518351146105cf5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016103bb565b6000835167ffffffffffffffff8111156105eb576105eb6115f0565b604051908082528060200260200182016040528015610614578160200160208202803683370190505b50905060005b845181101561068c5761065f85828151811061063857610638611b74565b602002602001015185838151811061065257610652611b74565b6020026020010151610353565b82828151811061067157610671611b74565b602090810291909101015261068581611ba0565b905061061a565b509392505050565b60405162461bcd60e51b815260206004820152600860248201526729a2aa2faa24a2a960c11b60448201526064016103bb565b6106cf6114dc565b7f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201527f000000000000000000000000000000000000000000000000000000000000000060808201527f000000000000000000000000000000000000000000000000000000000000000060a08201527f000000000000000000000000000000000000000000000000000000000000000060c08201527f000000000000000000000000000000000000000000000000000000000000000060e082015290565b6000805460405163e053ea3160e01b81526001600160a01b03858116600483015261087692169063e053ea3190602401602060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611bbb565b83610dbd565b60015410159392505050565b336001600160a01b03831614156108ed5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016103bb565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b03821660009081526002602052604090205482907f00000000000000000000000000000000000000000000000000000000000000009060ff16156109d85760405162461bcd60e51b815260206004820152600f60248201526e4455504c49434154455f434c41494d60881b60448201526064016103bb565b6001600160a01b03841660008181526002602052604090819020805460ff19166001179055517fa16751aa65ef03fb7261c0a125a84854295c191657bda7151d4396246b1bbeb490610a2b9086906115dd565b60405180910390a260005460405163e053ea3160e01b81526001600160a01b038087166004830152610aac92879291169063e053ea3190602401602060405180830381865afa158015610a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa69190611bbb565b85610e1c565b610ab682826107ff565b610af15760405162461bcd60e51b815260206004820152600c60248201526b26a4a724a6aaa6afaa24a2a960a11b60448201526064016103bb565b50505050565b60006103e9816040516370a0823160e01b81526001600160a01b038581166004830152610b92917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d9190611bbb565b610f32565b610f98565b6001600160a01b038516331480610bb35750610bb385336102de565b610c115760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016103bb565b6105638585858585610fca565b8151835114610c3f5760405162461bcd60e51b81526004016103bb90611bd4565b6001600160a01b038416610c655760405162461bcd60e51b81526004016103bb90611c1c565b3360005b8451811015610d4f576000858281518110610c8657610c86611b74565b602002602001015190506000858381518110610ca457610ca4611b74565b60209081029190910181015160008481526003835260408082206001600160a01b038e168352909352919091205490915081811015610cf55760405162461bcd60e51b81526004016103bb90611c61565b60008381526003602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610d34908490611cab565b9250508190555050505080610d4890611ba0565b9050610c69565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610d9f929190611cc3565b60405180910390a4610db58187878787876110f4565b505050505050565b600080826008811115610dd257610dd2611a96565b1415610de0575060006103e9565b60006001836008811115610df657610df6611a96565b610e009190611cf1565b610e0b906020611d08565b9390931c63ffffffff169392505050565b6000610e298460056107ff565b6040805160028082526060820183529293506000929091602083019080368337505060408051600280825260608201835293945060009390925090602083019080368337019050509050600082600081518110610e8857610e88611b74565b602002602001018181525050600182600181518110610ea957610ea9611b74565b60200260200101818152505082610ec1576001610ec4565b60025b60ff1681600081518110610eda57610eda611b74565b60200260200101818152505082610ef2576000610ef5565b60015b60ff1681600181518110610f0b57610f0b611b74565b602002602001018181525050610db586838360405180602001604052806000815250611250565b6000805b6008811015610f8f57610f476106c7565b8160088110610f5857610f58611b74565b6020020151831015610f7d57806008811115610f7657610f76611a96565b9392505050565b80610f8781611ba0565b915050610f36565b50600892915050565b600080826008811115610fad57610fad611a96565b610fb8906020611d08565b600019811c901b841791505092915050565b6001600160a01b038416610ff05760405162461bcd60e51b81526004016103bb90611c1c565b33611009818787611000886113d6565b610563886113d6565b60008481526003602090815260408083206001600160a01b038a1684529091529020548381101561104c5760405162461bcd60e51b81526004016103bb90611c61565b60008581526003602090815260408083206001600160a01b038b811685529252808320878503905590881682528120805486929061108b908490611cab565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46110eb828888888888611421565b50505050505050565b6001600160a01b0384163b15610db55760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111389089908990889088908890600401611d27565b6020604051808303816000875af1925050508015611173575060408051601f3d908101601f1916820190925261117091810190611d85565b60015b6112205761117f611da2565b806308c379a014156111b95750611194611dbe565b8061119f57506111bb565b8060405162461bcd60e51b81526004016103bb91906115dd565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016103bb565b6001600160e01b0319811663bc197c8160e01b146110eb5760405162461bcd60e51b81526004016103bb90611e48565b6001600160a01b0384166112b05760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016103bb565b81518351146112d15760405162461bcd60e51b81526004016103bb90611bd4565b3360005b845181101561136e578381815181106112f0576112f0611b74565b60200260200101516003600087848151811061130e5761130e611b74565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546113569190611cab565b9091555081905061136681611ba0565b9150506112d5565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516113bf929190611cc3565b60405180910390a4610563816000878787876110f4565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061141057611410611b74565b602090810291909101015292915050565b6001600160a01b0384163b15610db55760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906114659089908990889088908890600401611e90565b6020604051808303816000875af19250505080156114a0575060408051601f3d908101601f1916820190925261149d91810190611d85565b60015b6114ac5761117f611da2565b6001600160e01b0319811663f23a6e6160e01b146110eb5760405162461bcd60e51b81526004016103bb90611e48565b6040518061010001604052806008906020820280368337509192915050565b80356001600160a01b038116811461151257600080fd5b919050565b6000806040838503121561152a57600080fd5b611533836114fb565b946020939093013593505050565b6001600160e01b03198116811461155757600080fd5b50565b60006020828403121561156c57600080fd5b8135610f7681611541565b60006020828403121561158957600080fd5b5035919050565b6000815180845260005b818110156115b65760208185018101518683018201520161159a565b818111156115c8576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610f766020830184611590565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561162c5761162c6115f0565b6040525050565b600067ffffffffffffffff82111561164d5761164d6115f0565b5060051b60200190565b600082601f83011261166857600080fd5b8135602061167582611633565b6040516116828282611606565b83815260059390931b85018201928281019150868411156116a257600080fd5b8286015b848110156116bd57803583529183019183016116a6565b509695505050505050565b600082601f8301126116d957600080fd5b813567ffffffffffffffff8111156116f3576116f36115f0565b60405161170a601f8301601f191660200182611606565b81815284602083860101111561171f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561175457600080fd5b61175d866114fb565b945061176b602087016114fb565b9350604086013567ffffffffffffffff8082111561178857600080fd5b61179489838a01611657565b945060608801359150808211156117aa57600080fd5b6117b689838a01611657565b935060808801359150808211156117cc57600080fd5b506117d9888289016116c8565b9150509295509295909350565b600080604083850312156117f957600080fd5b823567ffffffffffffffff8082111561181157600080fd5b818501915085601f83011261182557600080fd5b8135602061183282611633565b60405161183f8282611606565b83815260059390931b850182019282810191508984111561185f57600080fd5b948201945b8386101561188457611875866114fb565b82529482019490820190611864565b9650508601359250508082111561189a57600080fd5b506118a785828601611657565b9150509250929050565b600081518084526020808501945080840160005b838110156118e1578151875295820195908201906001016118c5565b509495945050505050565b602081526000610f7660208301846118b1565b80356009811061151257600080fd5b60008060006060848603121561192357600080fd5b61192c846114fb565b925061193a602085016118ff565b9150604084013567ffffffffffffffff81111561195657600080fd5b611962868287016116c8565b9150509250925092565b6101008101818360005b6008811015611995578151835260209283019290910190600101611976565b50505092915050565b600080604083850312156119b157600080fd5b6119ba836114fb565b91506119c8602084016118ff565b90509250929050565b600080604083850312156119e457600080fd5b6119ed836114fb565b915060208301358015158114611a0257600080fd5b809150509250929050565b60008060408385031215611a2057600080fd5b611a29836114fb565b9150602083013567ffffffffffffffff811115611a4557600080fd5b6118a7858286016116c8565b600060208284031215611a6357600080fd5b610f76826114fb565b60008060408385031215611a7f57600080fd5b611a88836114fb565b91506119c8602084016114fb565b634e487b7160e01b600052602160045260246000fd5b6020810160098310611ace57634e487b7160e01b600052602160045260246000fd5b91905290565b600080600080600060a08688031215611aec57600080fd5b611af5866114fb565b9450611b03602087016114fb565b93506040860135925060608601359150608086013567ffffffffffffffff811115611b2d57600080fd5b6117d9888289016116c8565b600181811c90821680611b4d57607f821691505b60208210811415611b6e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611bb457611bb4611b8a565b5060010190565b600060208284031215611bcd57600080fd5b5051919050565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60008219821115611cbe57611cbe611b8a565b500190565b604081526000611cd660408301856118b1565b8281036020840152611ce881856118b1565b95945050505050565b600082821015611d0357611d03611b8a565b500390565b6000816000190483118215151615611d2257611d22611b8a565b500290565b6001600160a01b0386811682528516602082015260a060408201819052600090611d53908301866118b1565b8281036060840152611d6581866118b1565b90508281036080840152611d798185611590565b98975050505050505050565b600060208284031215611d9757600080fd5b8151610f7681611541565b600060033d1115611dbb5760046000803e5060005160e01c5b90565b600060443d1015611dcc5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611dfc57505050505090565b8285019150815181811115611e145750505050505090565b843d8701016020828501011115611e2e5750505050505090565b611e3d60208286010187611606565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611eca90830184611590565b97965050505050505056fea2646970667358221220089e93cb2533a75434702bb15d601bc29be336c277b2b26c7b44783c86535afb64736f6c634300080a0033";

export class ClaimERC1155Test__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    redeemableToken_: string,
    tierValues_: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClaimERC1155Test> {
    return super.deploy(
      redeemableToken_,
      tierValues_,
      overrides || {}
    ) as Promise<ClaimERC1155Test>;
  }
  getDeployTransaction(
    redeemableToken_: string,
    tierValues_: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      redeemableToken_,
      tierValues_,
      overrides || {}
    );
  }
  attach(address: string): ClaimERC1155Test {
    return super.attach(address) as ClaimERC1155Test;
  }
  connect(signer: Signer): ClaimERC1155Test__factory {
    return super.connect(signer) as ClaimERC1155Test__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimERC1155TestInterface {
    return new utils.Interface(_abi) as ClaimERC1155TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimERC1155Test {
    return new Contract(address, _abi, signerOrProvider) as ClaimERC1155Test;
  }
}
