/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TierByConstructionClaimTest,
  TierByConstructionClaimTestInterface,
} from "../TierByConstructionClaimTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ITier",
        name: "tier_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "constructionBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "enum ITier.Tier",
        name: "minimumTier_",
        type: "uint8",
      },
    ],
    name: "isTier",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumTier",
    outputs: [
      {
        internalType: "enum ITier.Tier",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tierContract",
    outputs: [
      {
        internalType: "contract ITier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001154380380620011548339810160408190526200003491620001aa565b806004816040518060400160405280600781526020016633b7b6322a35b760c91b8152506040518060400160405280600481526020016323aa25a760e11b81525081600390805190602001906200008d92919062000104565b508051620000a390600490602084019062000104565b5050600580546001600160a01b0319166001600160a01b0393909316929092179091555043600655806008811115620000e057620000e0620001dc565b6080816008811115620000f757620000f7620001dc565b815250505050506200022f565b8280546200011290620001f2565b90600052602060002090601f01602090048101928262000136576000855562000181565b82601f106200015157805160ff191683800117855562000181565b8280016001018555821562000181579182015b828111156200018157825182559160200191906001019062000164565b506200018f92915062000193565b5090565b5b808211156200018f576000815560010162000194565b600060208284031215620001bd57600080fd5b81516001600160a01b0381168114620001d557600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b600181811c908216806200020757607f821691505b602082108114156200022957634e487b7160e01b600052602260045260246000fd5b50919050565b608051610f0262000252600039600081816102b001526105cb0152610f026000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806377544f33116100a2578063a9059cbb11610071578063a9059cbb14610227578063bb1757cf1461023a578063c6788bdd1461024f578063dd62ed3e14610272578063f1ebd5dd146102ab57600080fd5b806377544f33146101ce57806395d89b41146101e1578063a30872db146101e9578063a457c2d71461021457600080fd5b806323b872dd116100de57806323b872dd14610170578063313ce56714610183578063395093511461019257806370a08231146101a557600080fd5b806306fdde0314610110578063095ea7b31461012e5780630f0af57f1461015157806318160ddd14610168575b600080fd5b6101186102df565b6040516101259190610bd9565b60405180910390f35b61014161013c366004610c0f565b610371565b6040519015158152602001610125565b61015a60065481565b604051908152602001610125565b60025461015a565b61014161017e366004610c39565b610388565b60405160128152602001610125565b6101416101a0366004610c0f565b610437565b61015a6101b3366004610c75565b6001600160a01b031660009081526020819052604090205490565b6101416101dc366004610c90565b610473565b6101186104f9565b6005546101fc906001600160a01b031681565b6040516001600160a01b039091168152602001610125565b610141610222366004610c0f565b610508565b610141610235366004610c0f565b6105a1565b61024d610248366004610ce1565b6105ae565b005b61014161025d366004610c75565b60076020526000908152604090205460ff1681565b61015a610280366004610da3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102d27f000000000000000000000000000000000000000000000000000000000000000081565b6040516101259190610dec565b6060600380546102ee90610e14565b80601f016020809104026020016040519081016040528092919081815260200182805461031a90610e14565b80156103675780601f1061033c57610100808354040283529160200191610367565b820191906000526020600020905b81548152906001019060200180831161034a57829003601f168201915b5050505050905090565b600061037e33848461074c565b5060015b92915050565b6000610395848484610870565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561041f5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61042c853385840361074c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161037e91859061046e908690610e65565b61074c565b60055460405163e053ea3160e01b81526001600160a01b0384811660048301526000926104ed9291169063e053ea3190602401602060405180830381865afa1580156104c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e79190610e7d565b83610a3e565b60065410159392505050565b6060600480546102ee90610e14565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561058a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610416565b610597338585840361074c565b5060019392505050565b600061037e338484610870565b6001600160a01b03821660009081526007602052604090205482907f00000000000000000000000000000000000000000000000000000000000000009060ff161561062d5760405162461bcd60e51b815260206004820152600f60248201526e4455504c49434154455f434c41494d60881b6044820152606401610416565b6001600160a01b03841660008181526007602052604090819020805460ff19166001179055517fa16751aa65ef03fb7261c0a125a84854295c191657bda7151d4396246b1bbeb490610680908690610bd9565b60405180910390a260055460405163e053ea3160e01b81526001600160a01b03808716600483015261070192879291169063e053ea3190602401602060405180830381865afa1580156106d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fb9190610e7d565b85610a9d565b61070b8282610473565b6107465760405162461bcd60e51b815260206004820152600c60248201526b26a4a724a6aaa6afaa24a2a960a11b6044820152606401610416565b50505050565b6001600160a01b0383166107ae5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610416565b6001600160a01b03821661080f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610416565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166108d45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610416565b6001600160a01b0382166109365760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610416565b6001600160a01b038316600090815260208190526040902054818110156109ae5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610416565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109e5908490610e65565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a3191815260200190565b60405180910390a3610746565b600080826008811115610a5357610a53610dd6565b1415610a6157506000610382565b60006001836008811115610a7757610a77610dd6565b610a819190610e96565b610a8c906020610ead565b9390931c63ffffffff169392505050565b610aa8836064610aad565b505050565b6001600160a01b038216610b035760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610416565b8060026000828254610b159190610e65565b90915550506001600160a01b03821660009081526020819052604081208054839290610b42908490610e65565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000815180845260005b81811015610bb257602081850181015186830182015201610b96565b81811115610bc4576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610bec6020830184610b8c565b9392505050565b80356001600160a01b0381168114610c0a57600080fd5b919050565b60008060408385031215610c2257600080fd5b610c2b83610bf3565b946020939093013593505050565b600080600060608486031215610c4e57600080fd5b610c5784610bf3565b9250610c6560208501610bf3565b9150604084013590509250925092565b600060208284031215610c8757600080fd5b610bec82610bf3565b60008060408385031215610ca357600080fd5b610cac83610bf3565b9150602083013560098110610cc057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610cf457600080fd5b610cfd83610bf3565b9150602083013567ffffffffffffffff80821115610d1a57600080fd5b818501915085601f830112610d2e57600080fd5b813581811115610d4057610d40610ccb565b604051601f8201601f19908116603f01168101908382118183101715610d6857610d68610ccb565b81604052828152886020848701011115610d8157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060408385031215610db657600080fd5b610dbf83610bf3565b9150610dcd60208401610bf3565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b6020810160098310610e0e57634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c90821680610e2857607f821691505b60208210811415610e4957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610e7857610e78610e4f565b500190565b600060208284031215610e8f57600080fd5b5051919050565b600082821015610ea857610ea8610e4f565b500390565b6000816000190483118215151615610ec757610ec7610e4f565b50029056fea26469706673582212207dc49fe8993e9acc76195002b4aad656948217e86495a9591aaae7a97e514c0f64736f6c634300080a0033";

export class TierByConstructionClaimTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    tier_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TierByConstructionClaimTest> {
    return super.deploy(
      tier_,
      overrides || {}
    ) as Promise<TierByConstructionClaimTest>;
  }
  getDeployTransaction(
    tier_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tier_, overrides || {});
  }
  attach(address: string): TierByConstructionClaimTest {
    return super.attach(address) as TierByConstructionClaimTest;
  }
  connect(signer: Signer): TierByConstructionClaimTest__factory {
    return super.connect(signer) as TierByConstructionClaimTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TierByConstructionClaimTestInterface {
    return new utils.Interface(_abi) as TierByConstructionClaimTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TierByConstructionClaimTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TierByConstructionClaimTest;
  }
}
