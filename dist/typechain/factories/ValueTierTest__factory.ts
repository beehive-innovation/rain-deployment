/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ValueTierTest, ValueTierTestInterface } from "../ValueTierTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "tierValues",
    outputs: [
      {
        internalType: "uint256[8]",
        name: "tierValues_",
        type: "uint256[8]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ITier.Tier",
        name: "tier_",
        type: "uint8",
      },
    ],
    name: "wrappedTierToValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
    ],
    name: "wrappedValueToTier",
    outputs: [
      {
        internalType: "enum ITier.Tier",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61018060405234801561001157600080fd5b5060405161060638038061060683398101604081905261003091610077565b80516080908152602082015160a0908152604083015160c0908152606084015160e09081529284015161010052908301516101205282015161014052015161016052610103565b600061010080838503121561008b57600080fd5b83601f84011261009a57600080fd5b6040518181016001600160401b03811182821017156100c957634e487b7160e01b600052604160045260246000fd5b6040529083019080858311156100de57600080fd5b845b838110156100f85780518252602091820191016100e0565b509095945050505050565b60805160a05160c05160e051610100516101205161014051610160516104a061016660003960006101d2015260006101ac01526000610186015260006101600152600061013a015260006101140152600060ee0152600060cb01526104a06000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634bc1010e146100465780635d2c11171461006f57806370230b3914610090575b600080fd5b6100596100543660046102e0565b6100a5565b6040516100669190610328565b60405180910390f35b61008261007d366004610369565b6100b6565b604051908152602001610066565b6100986100c1565b604051610066919061038a565b60006100b0826101f9565b92915050565b60006100b08261025f565b6100c96102c1565b7f000000000000000000000000000000000000000000000000000000000000000081527f000000000000000000000000000000000000000000000000000000000000000060208201527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201527f000000000000000000000000000000000000000000000000000000000000000060808201527f000000000000000000000000000000000000000000000000000000000000000060a08201527f000000000000000000000000000000000000000000000000000000000000000060c08201527f000000000000000000000000000000000000000000000000000000000000000060e082015290565b6000805b60088110156102565761020e6100c1565b816008811061021f5761021f6103bc565b60200201518310156102445780600881111561023d5761023d6102f9565b9392505050565b8061024e8161041a565b9150506101fd565b50600892915050565b600080826008811115610274576102746102f9565b116102805760006100b0565b6102886100c1565b600183600881111561029c5761029c6102f9565b6102a69190610453565b600881106102b6576102b66103bc565b602002015192915050565b6040518061010001604052806008906020820280368337509192915050565b6000602082840312156102f257600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160098310610363577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60006020828403121561037b57600080fd5b81356009811061023d57600080fd5b6101008101818360005b60088110156103b3578151835260209283019290910190600101610394565b50505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561044c5761044c6103eb565b5060010190565b600082821015610465576104656103eb565b50039056fea26469706673582212208c2884d41df0d7d8971f5371e0d3ba71e713edcee8e632353d6fda9dcae782ab64736f6c634300080a0033";

export class ValueTierTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    tierValues_: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ValueTierTest> {
    return super.deploy(tierValues_, overrides || {}) as Promise<ValueTierTest>;
  }
  getDeployTransaction(
    tierValues_: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tierValues_, overrides || {});
  }
  attach(address: string): ValueTierTest {
    return super.attach(address) as ValueTierTest;
  }
  connect(signer: Signer): ValueTierTest__factory {
    return super.connect(signer) as ValueTierTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValueTierTestInterface {
    return new utils.Interface(_abi) as ValueTierTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ValueTierTest {
    return new Contract(address, _abi, signerOrProvider) as ValueTierTest;
  }
}
