/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TrustReentrant,
  TrustReentrantInterface,
} from "../TrustReentrant";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "addFreezable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Trust",
        name: "trustContract_",
        type: "address",
      },
    ],
    name: "addReentrantTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "freezables",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600b81526a55534420436c617373696360a81b602080830191825283518085019094526005845264555344434360d81b9084015281519192916200006291600391620002c0565b50805162000078906004906020840190620002c0565b50620000a3915033905062000090600660096200037c565b6200009d90600a62000496565b620000a9565b620004e8565b6001600160a01b038216620001055760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b6200011360008383620001a0565b80600260008282546200012791906200037c565b90915550506001600160a01b03821660009081526020819052604081208054839290620001569084906200037c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b620001b88383836200025460201b620005f01760201c565b6001600160a01b03831615801590620001de57506006546001600160a01b038481169116145b156200024f57600660009054906101000a90046001600160a01b03166001600160a01b03166379c4985c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200023557600080fd5b505af11580156200024a573d6000803e3d6000fd5b505050505b505050565b6200026c8383836200024f60201b6200051c1760201c565b6001600160a01b03821660009081526005602052604090205460ff16156200024f5760405162461bcd60e51b8152602060048201526006602482015265232927ad22a760d11b6044820152606401620000fc565b828054620002ce90620004ab565b90600052602060002090601f016020900481019282620002f257600085556200033d565b82601f106200030d57805160ff19168380011785556200033d565b828001600101855582156200033d579182015b828111156200033d57825182559160200191906001019062000320565b506200034b9291506200034f565b5090565b5b808211156200034b576000815560010162000350565b634e487b7160e01b600052601160045260246000fd5b6000821982111562000392576200039262000366565b500190565b600181815b80851115620003d8578160001904821115620003bc57620003bc62000366565b80851615620003ca57918102915b93841c93908002906200039c565b509250929050565b600082620003f15750600162000490565b81620004005750600062000490565b8160018114620004195760028114620004245762000444565b600191505062000490565b60ff84111562000438576200043862000366565b50506001821b62000490565b5060208310610133831016604e8410600b841016171562000469575081810a62000490565b62000475838362000397565b80600019048211156200048c576200048c62000366565b0290505b92915050565b6000620004a48383620003e0565b9392505050565b600181811c90821680620004c057607f821691505b60208210811415620004e257634e487b7160e01b600052602260045260246000fd5b50919050565b610e2f80620004f86000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806348ea30da116100a2578063902d55a511610071578063902d55a51461028b57806395d89b4114610293578063a457c2d71461029b578063a9059cbb146102ae578063dd62ed3e146102c157600080fd5b806348ea30da146101ed5780635bb9058b1461021d57806370a082311461024f57806379cc67901461027857600080fd5b80632e0f2625116100e95780632e0f262514610181578063313ce5671461019b57806339509351146101a257806342966c68146101b557806348422faa146101ca57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102fa565b6040516101309190610b3c565b60405180910390f35b61014c610147366004610ba6565b61038c565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610bd2565b6103a3565b610189600681565b60405160ff9091168152602001610130565b6006610189565b61014c6101b0366004610ba6565b610452565b6101c86101c3366004610c13565b61048e565b005b61014c6101d8366004610c2c565b60056020526000908152604090205460ff1681565b6101c86101fb366004610c2c565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6101c861022b366004610c2c565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b61016061025d366004610c2c565b6001600160a01b031660009081526020819052604090205490565b6101c8610286366004610ba6565b61049b565b610160610521565b61012361053b565b61014c6102a9366004610ba6565b61054a565b61014c6102bc366004610ba6565b6105e3565b6101606102cf366004610c50565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461030990610c89565b80601f016020809104026020016040519081016040528092919081815260200182805461033590610c89565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b5050505050905090565b6000610399338484610642565b5060015b92915050565b60006103b0848484610766565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561043a5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104478533858403610642565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610399918590610489908690610cda565b610642565b6104983382610940565b50565b60006104a783336102cf565b9050818110156105055760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610431565b6105128333848403610642565b61051c8383610940565b505050565b61052d60066009610cda565b61053890600a610dd6565b81565b60606004805461030990610c89565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105cc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610431565b6105d93385858403610642565b5060019392505050565b6000610399338484610766565b6001600160a01b03821660009081526005602052604090205460ff161561051c5760405162461bcd60e51b8152602060048201526006602482015265232927ad22a760d11b6044820152606401610431565b6001600160a01b0383166106a45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610431565b6001600160a01b0382166107055760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610431565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107ca5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610431565b6001600160a01b03821661082c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610431565b610837838383610a9a565b6001600160a01b038316600090815260208190526040902054818110156108af5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610431565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108e6908490610cda565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093291815260200190565b60405180910390a350505050565b6001600160a01b0382166109a05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610431565b6109ac82600083610a9a565b6001600160a01b03821660009081526020819052604090205481811015610a205760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610431565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610a4f908490610de2565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b610aa58383836105f0565b6001600160a01b03831615801590610aca57506006546001600160a01b038481169116145b1561051c57600660009054906101000a90046001600160a01b03166001600160a01b03166379c4985c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b1f57600080fd5b505af1158015610b33573d6000803e3d6000fd5b50505050505050565b600060208083528351808285015260005b81811015610b6957858101830151858201604001528201610b4d565b81811115610b7b576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461049857600080fd5b60008060408385031215610bb957600080fd5b8235610bc481610b91565b946020939093013593505050565b600080600060608486031215610be757600080fd5b8335610bf281610b91565b92506020840135610c0281610b91565b929592945050506040919091013590565b600060208284031215610c2557600080fd5b5035919050565b600060208284031215610c3e57600080fd5b8135610c4981610b91565b9392505050565b60008060408385031215610c6357600080fd5b8235610c6e81610b91565b91506020830135610c7e81610b91565b809150509250929050565b600181811c90821680610c9d57607f821691505b60208210811415610cbe57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ced57610ced610cc4565b500190565b600181815b80851115610d2d578160001904821115610d1357610d13610cc4565b80851615610d2057918102915b93841c9390800290610cf7565b509250929050565b600082610d445750600161039d565b81610d515750600061039d565b8160018114610d675760028114610d7157610d8d565b600191505061039d565b60ff841115610d8257610d82610cc4565b50506001821b61039d565b5060208310610133831016604e8410600b8410161715610db0575081810a61039d565b610dba8383610cf2565b8060001904821115610dce57610dce610cc4565b029392505050565b6000610c498383610d35565b600082821015610df457610df4610cc4565b50039056fea2646970667358221220c5fcef9163436745ced664e9b89f99163efdecf3c6a4b8032b42042d29046e3d64736f6c634300080a0033";

export class TrustReentrant__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TrustReentrant> {
    return super.deploy(overrides || {}) as Promise<TrustReentrant>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TrustReentrant {
    return super.attach(address) as TrustReentrant;
  }
  connect(signer: Signer): TrustReentrant__factory {
    return super.connect(signer) as TrustReentrant__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrustReentrantInterface {
    return new utils.Interface(_abi) as TrustReentrantInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TrustReentrant {
    return new Contract(address, _abi, signerOrProvider) as TrustReentrant;
  }
}
