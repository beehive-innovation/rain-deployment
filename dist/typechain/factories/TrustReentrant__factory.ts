/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TrustReentrant,
  TrustReentrantInterface,
} from "../TrustReentrant";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "addFreezable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Trust",
        name: "trustContract_",
        type: "address",
      },
    ],
    name: "addReentrantTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "freezables",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600b81526a55534420436c617373696360a81b602080830191825283518085019094526005845264555344434360d81b9084015281519192916200006291600391620002c0565b50805162000078906004906020840190620002c0565b50620000a3915033905062000090600660096200037c565b6200009d90600a62000496565b620000a9565b620004e8565b6001600160a01b038216620001055760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b6200011360008383620001a0565b80600260008282546200012791906200037c565b90915550506001600160a01b03821660009081526020819052604081208054839290620001569084906200037c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b620001b88383836200025460201b620007351760201c565b6001600160a01b03831615801590620001de57506006546001600160a01b038481169116145b156200024f57600660009054906101000a90046001600160a01b03166001600160a01b03166379c4985c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200023557600080fd5b505af11580156200024a573d6000803e3d6000fd5b505050505b505050565b6200026c8383836200024f60201b620006221760201c565b6001600160a01b03821660009081526005602052604090205460ff16156200024f5760405162461bcd60e51b8152602060048201526006602482015265232927ad22a760d11b6044820152606401620000fc565b828054620002ce90620004ab565b90600052602060002090601f016020900481019282620002f257600085556200033d565b82601f106200030d57805160ff19168380011785556200033d565b828001600101855582156200033d579182015b828111156200033d57825182559160200191906001019062000320565b506200034b9291506200034f565b5090565b5b808211156200034b576000815560010162000350565b634e487b7160e01b600052601160045260246000fd5b6000821982111562000392576200039262000366565b500190565b600181815b80851115620003d8578160001904821115620003bc57620003bc62000366565b80851615620003ca57918102915b93841c93908002906200039c565b509250929050565b600082620003f15750600162000490565b81620004005750600062000490565b8160018114620004195760028114620004245762000444565b600191505062000490565b60ff84111562000438576200043862000366565b50506001821b62000490565b5060208310610133831016604e8410600b841016171562000469575081810a62000490565b62000475838362000397565b80600019048211156200048c576200048c62000366565b0290505b92915050565b6000620004a48383620003e0565b9392505050565b600181811c90821680620004c057607f821691505b60208210811415620004e257634e487b7160e01b600052602260045260246000fd5b50919050565b61129280620004f86000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806348ea30da116100b2578063902d55a511610081578063a457c2d711610066578063a457c2d714610318578063a9059cbb1461032b578063dd62ed3e1461033e57600080fd5b8063902d55a51461030857806395d89b411461031057600080fd5b806348ea30da1461020d5780635bb9058b1461026257806370a08231146102bf57806379cc6790146102f557600080fd5b80632e0f26251161010957806339509351116100ee57806339509351146101c257806342966c68146101d557806348422faa146101ea57600080fd5b80632e0f2625146101a1578063313ce567146101bb57600080fd5b806306fdde031461013b578063095ea7b31461015957806318160ddd1461017c57806323b872dd1461018e575b600080fd5b610143610384565b6040516101509190610f06565b60405180910390f35b61016c610167366004610f9b565b610416565b6040519015158152602001610150565b6002545b604051908152602001610150565b61016c61019c366004610fc7565b61042d565b6101a9600681565b60405160ff9091168152602001610150565b60066101a9565b61016c6101d0366004610f9b565b610518565b6101e86101e3366004611008565b610561565b005b61016c6101f8366004611021565b60056020526000908152604090205460ff1681565b6101e861021b366004611021565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6101e8610270366004611021565b73ffffffffffffffffffffffffffffffffffffffff16600090815260056020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6101806102cd366004611021565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6101e8610303366004610f9b565b61056e565b610180610627565b610143610641565b61016c610326366004610f9b565b610650565b61016c610339366004610f9b565b610728565b61018061034c366004611045565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6060600380546103939061107e565b80601f01602080910402602001604051908101604052809291908181526020018280546103bf9061107e565b801561040c5780601f106103e15761010080835404028352916020019161040c565b820191906000526020600020905b8154815290600101906020018083116103ef57829003601f168201915b5050505050905090565b60006104233384846107c5565b5060015b92915050565b600061043a848484610978565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260016020908152604080832033845290915290205482811015610500576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61050d85338584036107c5565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161042391859061055c908690611101565b6107c5565b61056b3382610c37565b50565b600061057a833361034c565b90508181101561060b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760448201527f616e63650000000000000000000000000000000000000000000000000000000060648201526084016104f7565b61061883338484036107c5565b6106228383610c37565b505050565b61063360066009611101565b61063e90600a611239565b81565b6060600480546103939061107e565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281205482811015610711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016104f7565b61071e33858584036107c5565b5060019392505050565b6000610423338484610978565b73ffffffffffffffffffffffffffffffffffffffff821660009081526005602052604090205460ff1615610622576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f46524f5a454e000000000000000000000000000000000000000000000000000060448201526064016104f7565b73ffffffffffffffffffffffffffffffffffffffff8316610867576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104f7565b73ffffffffffffffffffffffffffffffffffffffff821661090a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104f7565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104f7565b73ffffffffffffffffffffffffffffffffffffffff8216610abe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104f7565b610ac9838383610e30565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610b7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104f7565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610bc3908490611101565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c2991815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff8216610cda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104f7565b610ce682600083610e30565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610d9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016104f7565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120838303905560028054849290610dd8908490611245565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b610e3b838383610735565b73ffffffffffffffffffffffffffffffffffffffff831615801590610e7a575060065473ffffffffffffffffffffffffffffffffffffffff8481169116145b1561062257600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379c4985c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ee957600080fd5b505af1158015610efd573d6000803e3d6000fd5b50505050505050565b600060208083528351808285015260005b81811015610f3357858101830151858201604001528201610f17565b81811115610f45576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461056b57600080fd5b60008060408385031215610fae57600080fd5b8235610fb981610f79565b946020939093013593505050565b600080600060608486031215610fdc57600080fd5b8335610fe781610f79565b92506020840135610ff781610f79565b929592945050506040919091013590565b60006020828403121561101a57600080fd5b5035919050565b60006020828403121561103357600080fd5b813561103e81610f79565b9392505050565b6000806040838503121561105857600080fd5b823561106381610f79565b9150602083013561107381610f79565b809150509250929050565b600181811c9082168061109257607f821691505b602082108114156110cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611114576111146110d2565b500190565b600181815b8085111561117257817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611158576111586110d2565b8085161561116557918102915b93841c939080029061111e565b509250929050565b60008261118957506001610427565b8161119657506000610427565b81600181146111ac57600281146111b6576111d2565b6001915050610427565b60ff8411156111c7576111c76110d2565b50506001821b610427565b5060208310610133831016604e8410600b84101617156111f5575081810a610427565b6111ff8383611119565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611231576112316110d2565b029392505050565b600061103e838361117a565b600082821015611257576112576110d2565b50039056fea2646970667358221220757fdb68749e005a17f74cc296c614a86dd1ae8f1bbce4dc06857666f4fe3c4f64736f6c634300080a0033";

export class TrustReentrant__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TrustReentrant> {
    return super.deploy(overrides || {}) as Promise<TrustReentrant>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TrustReentrant {
    return super.attach(address) as TrustReentrant;
  }
  connect(signer: Signer): TrustReentrant__factory {
    return super.connect(signer) as TrustReentrant__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrustReentrantInterface {
    return new utils.Interface(_abi) as TrustReentrantInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TrustReentrant {
    return new Contract(address, _abi, signerOrProvider) as TrustReentrant;
  }
}
